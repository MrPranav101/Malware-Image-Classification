from tensorflow.keras.preprocessing.image import ImageDataGenerator
from sklearn.model_selection import StratifiedKFold

import numpy as np


class MaliMgClassification:
    def __init__(self):
        self.classifier = None
        self.DATADIR = '../Data/malimg_paper_dataset_imgs/'
        self.dataset = None

    def set_classifier(self, classifier):
        self.classifier = classifier

    def prepare_df(self):
        self.dataset = ImageDataGenerator(
            rescale=1. / 255,
            rotation_range=40,
            width_shift_range=0.2,
            height_shift_range=0.2,
            shear_range=0.2,
            zoom_range=0.2,
            horizontal_flip=True,
            fill_mode='nearest') \
            .flow_from_directory(directory=self.DATADIR, target_size=(64, 64),
                                 batch_size=10000, class_mode='categorical')

    def train(self):
        skf = StratifiedKFold(n_splits=10, random_state=22, shuffle=True)
        imgs, labels = next(self.dataset)
        history = {}
        scores = {}
        model = self.classifier
        for i, (train_index, test_index) in enumerate(skf.split(imgs, np.zeros(shape=(len(imgs), 1)))):
            x_train, x_test = imgs[train_index], imgs[test_index]
            y_train, y_test = labels[train_index], labels[test_index]
            history["fold" + f"_{i}"] = model.fit(x_train, y_train, validation_data=(x_test, y_test),
                                                  epochs=10)

            scores["fold" + f"_{i}"] = model.evaluate(imgs[test_index], labels[test_index], verbose=0)
        return history, scores
