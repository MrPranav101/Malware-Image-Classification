from malimg import MaliMgClassification
import metrics
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten, Dense
from models import MalwareModelsDispatcher


def malware_model():
    Malware_model = Sequential()
    Malware_model.add(Conv2D(30, kernel_size=(3, 3),
                      activation='relu',
                      input_shape=(64,64,3)))
    Malware_model.add(MaxPooling2D(pool_size=(2, 2)))
    Malware_model.add(Conv2D(15, (3, 3), activation='relu'))
    Malware_model.add(MaxPooling2D(pool_size=(2, 2)))
    Malware_model.add(Dropout(0.25))
    Malware_model.add(Flatten())
    Malware_model.add(Dense(128, activation='relu'))
    Malware_model.add(Dropout(0.5))
    Malware_model.add(Dense(50, activation='relu'))
    Malware_model.add(Dense(25, activation='softmax'))
    Malware_model.compile(loss='categorical_crossentropy', optimizer='adam',
                          metrics=['accuracy', metrics.f1_m, metrics.precision_m, metrics.recall_m])
    return Malware_model


pipe = MaliMgClassification()

loss='hinge'
optimizer='adadelta'
# loss = 'sparse_categorical_crossentropy'
# optimizer = tf.keras.optimizers.SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model_dispatcher = MalwareModelsDispatcher(optimizer=optimizer,loss_fn=loss)

model = model_dispatcher.GRUSVM_model()
pipe.prepare_df()
pipe.set_classifier(model)
history, scores = pipe.train(n_splits=2, epochs=2)
